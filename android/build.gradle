plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}

group = 'io.github.davidon4'
version = '1.0.0'

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            
            pom {
                name = 'Attribution SDK'
                description = 'Android Attribution SDK for tracking app installations and events'
                url = 'https://github.com/Davidon4/reddimon-attribution-sdk'
                
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                
                developers {
                    developer {
                        id = 'davidon4'
                        name = 'Davidon4'
                        email = 'dev@reddimon.com'
                    }
                }
                
                scm {
                    connection = 'scm:git:git://github.com/Davidon4/reddimon-attribution-sdk.git'
                    developerConnection = 'scm:git:ssh://github.com/Davidon4/reddimon-attribution-sdk.git'
                    url = 'https://github.com/Davidon4/reddimon-attribution-sdk'
                }
            }
        }
    }
    repositories {
        maven {
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.properties["ossrhUsername"] ?: System.getenv("OSSRH_USERNAME")
                password = project.properties["ossrhPassword"] ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

signing {
    def signingKeyId = "956CC81A"
    def signingKey = System.getenv("GPG_KEY")
    def signingPassword = System.getenv("SIGNING_PASSWORD")
    
    useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = project.properties["ossrhUsername"] ?: System.getenv("OSSRH_USERNAME")
            password = project.properties["ossrhPassword"] ?: System.getenv("OSSRH_PASSWORD")
        }
    }
}

// Trigger build
